# Generated by Django 3.0.6 on 2021-07-23 23:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_phone_number', models.CharField(max_length=20)),
                ('user_street_number', models.CharField(blank=True, max_length=10, null=True)),
                ('user_street', models.CharField(blank=True, max_length=50, null=True)),
                ('user_city', models.CharField(blank=True, max_length=50, null=True)),
                ('user_zipcode', models.CharField(blank=True, max_length=5, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('card_type', models.CharField(choices=[('Visa', 'Visa'), ('MasterCard', 'MasterCard'), ('AmericanExpress', 'AmericanExpress'), ('Discover', 'Discover')], max_length=50)),
                ('card_number', models.CharField(max_length=20, unique=True)),
                ('card_exp_date', models.CharField(max_length=5)),
                ('card_cvv', models.CharField(max_length=5)),
                ('card_billing_zipcode', models.CharField(max_length=5)),
                ('card_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_price', models.IntegerField(default=0)),
                ('food_image', models.CharField(max_length=500, null=True)),
                ('food_name', models.CharField(max_length=100)),
                ('food_description', models.TextField(max_length=1000, null=True)),
                ('food_category', models.CharField(max_length=50)),
                ('food_op1', models.CharField(max_length=100, null=True)),
                ('food_op2', models.CharField(max_length=100, null=True)),
                ('food_op3', models.CharField(max_length=100, null=True)),
                ('food_op4', models.CharField(max_length=100, null=True)),
                ('food_op5', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GuestOrder',
            fields=[
                ('guest_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('guest_order_name', models.CharField(max_length=100)),
                ('guest_order_phone_number', models.CharField(max_length=20)),
                ('guest_order_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('guest_order_total', models.IntegerField()),
                ('guest_order_tip', models.IntegerField()),
                ('guest_order_type', models.CharField(choices=[('Pick-up', 'Pick-up'), ('Delivery', 'Delivery')], max_length=10)),
                ('guest_order_date', models.DateField()),
                ('guest_order_payment_type', models.CharField(choices=[('Card', 'Card'), ('Cash', 'Cash')], max_length=10)),
                ('guest_order_card_number', models.CharField(max_length=20, null=True)),
                ('guest_order_card_exp_date', models.CharField(max_length=5, null=True)),
                ('guest_order_card_cvv', models.CharField(max_length=5, null=True)),
                ('guest_order_card_zipcode', models.CharField(max_length=5, null=True)),
                ('guest_order_street_number', models.CharField(max_length=10, null=True)),
                ('guest_order_street', models.CharField(max_length=50, null=True)),
                ('guest_order_city', models.CharField(max_length=50, null=True)),
                ('guest_order_zipcode', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_total', models.IntegerField()),
                ('order_tip', models.IntegerField()),
                ('order_type', models.CharField(choices=[('Pick-up', 'Pick-up'), ('Delivery', 'Delivery')], max_length=10)),
                ('order_payment_type', models.CharField(choices=[('Card', 'Card'), ('Cash', 'Cash')], max_length=10)),
                ('order_date', models.DateField()),
                ('order_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='luckydragon_app.Card')),
                ('order_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('order_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_detail_quantity', models.IntegerField()),
                ('order_detail_options', models.TextField(max_length=100, null=True)),
                ('order_detail_price', models.IntegerField()),
                ('order_detail_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luckydragon_app.Food')),
                ('order_detail_guest_order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='luckydragon_app.GuestOrder')),
                ('order_detail_order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='luckydragon_app.Order')),
            ],
        ),
    ]
